image: docker:dind

variables:
  DOCKER_DRIVER: overlay
  CI_DEBUG_TRACE: "false"

stages:
  - build
  - package
  - deploy

node-package-hom:
  environment: homologation
  stage: build
  image: docker-images.sao.hamburgsud.com/hs-angular:1.0.2
  script:
  - mkdir -p app
  - echo -e $NPMRC > .npmrc
  - echo "grant_type=password&username=root&password=2011du\$H" > auth.txt
  - export http_proxy=
  - export https_proxy=
  - ACCESS_TOKEN=`curl --data "@auth.txt" --request POST https://gitlab.sao.hamburgsud.com/oauth/token`
  - TOKEN=`echo $ACCESS_TOKEN | awk '{split($0,a,","); print a[1];}' | awk '{split($0,a,":"); print a[2];}' | tr -d \"`
  - sed -i "s/<TOKEN>/$TOKEN/g" .npmrc
  - npm config set strict-ssl false
  - rm package-lock.json
  - npm install -q
  - npm run build -- --output-path=app/dist/out --configuration $APP_PROFILE
  artifacts:
    paths:
      - app/
    expire_in: 12 hour
  #cache:
  #  policy: push
  #  paths:
  #    - node_modules/
  only:
    - release
  except:
    - tags

node-package:
  environment: production
  stage: build
  image: docker-images.sao.hamburgsud.com/hs-angular:1.0.2
  script:
  - mkdir -p app
  - echo -e $NPMRC > .npmrc
  - echo "grant_type=password&username=root&password=2011du\$H" > auth.txt
  - export http_proxy=
  - export https_proxy=
  - ACCESS_TOKEN=`curl --data "@auth.txt" --request POST https://gitlab.sao.hamburgsud.com/oauth/token`
  - TOKEN=`echo $ACCESS_TOKEN | awk '{split($0,a,","); print a[1];}' | awk '{split($0,a,":"); print a[2];}' | tr -d \"`
  - sed -i "s/<TOKEN>/$TOKEN/g" .npmrc
  - npm config set strict-ssl false
  - rm package-lock.json
  - npm install -q
  - npm run build -- --output-path=app/dist/out --configuration $APP_PROFILE
  artifacts:
    paths:
      - app/
    expire_in: 12 hour
  only:
    - master
  except:
    - tags

docker-build-hom:
  environment: homologation
  stage: package
  script:
  - sh build-image.sh
  only:
    - release
  except:
    - tags

docker-build:
  environment: production
  stage: package
  script:
  - sh build-image.sh
  only:
    - master
  except:
    - tags


deploy-app-hom:
  environment: homologation
  image: docker-images.sao.hamburgsud.com/k8sctl:1.0.1
  stage: deploy
  script:
  - sh deploy-to-k8s.sh
  only:
    - release
  except:
    - tags

deploy-app:
  image: docker-images.sao.hamburgsud.com/k8sctl:1.0.1
  environment: production
  stage: deploy
  script:
  - sh deploy-to-k8s.sh
  only:
    - master
  except:
    - tags
